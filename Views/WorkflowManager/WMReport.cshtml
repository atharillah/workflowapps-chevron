@{
    Layout = Layout = "~/Views/Shared/_WMLayout.cshtml";
}
@model  WorkFlowAppsChevron.Controllers.WorkflowManagerController
<body id=myBody onload="init()">
    <div class="contentWork">
        <!-- The Modal -->
        <div id="sample">
            <label class="wfHeader">Workflow Application</label>
            <img style="margin-left: 33%; max-height: 5; max-width: 5%;margin-bottom: -18px; margin-top:14px;" src="../../Resources/Images/LogoChevron.png" />
            <div class="containerLabel">
                <label id="wfLabel" class="wfLabel">  @ViewData["Title"]     </label>
            </div>
            <div class="demo-section k-content wide">
                @(Html.Kendo().Chart<WorkFlowAppsChevron.Models.NodeDataArray_Table>()
                                    .DataSource(dataSource => dataSource
                                    .Model(model => model.Id(p => p.id))
                                    .ServerOperation(true)
                                    .Read(read => read.Action("Chart_Data", "WorkflowManager")))
                                    .Name("chart")
                                    .Title("Hybrid car mileage report")
                                    .Legend(legend => legend
                                        .Position(ChartLegendPosition.Top)
                                    )
                                    .Series(series =>
                                    {
                                        series
                                            .Column(new int[] { 1, 3, 2, 1 })
                                            .Stack(true)
                                            .Color("#bc0707")
                                            .Name("Start Time");
                                        series
                                            .Column(new int[] { 1, 3, 2, 1 })
                                            .Stack(true)
                                            .Color("#ef0202")
                                            .Name("End Time");
                                        series
                                            .Line(new int[] { 2, 4, 3, 1 })
                                            .Name("Due Time")
                                            .Color("#003b70")
                                            .Axis("l100km");
                                    })
                                    .CategoryAxis(axis => axis
                                    .Categories(p => p.processName)

                                        // Align the first two value axes to the left
                                        // and the last two to the right.
                                        //
                                        // Right alignment is done by specifying a
                                        // crossing value greater than or equal to
                                        // the number of categories.
                                        .AxisCrossingValue(0, 0, 10, 10)
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric("days")
                                            .Title("Days")
                                            .Color("#bc0707")
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric("l100km")
                                            .Title("Due Days")
                                            .Color("#003b70")
                                    )
                )
            </div>
        </div>
    </div>
</body>